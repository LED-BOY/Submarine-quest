{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/scenes/PlayScene.js","src/scenes/EndScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","PLAY","END","IMAGE","LOGO","OPTIONS","TITLE","GAME_BG","END_BG","AUDIO","GAME_MUSIC","DIVER_SOUND","ENEMY_SOUND","SHARK_SOUND","PLAYER_FIRE_SOUND","END_SOUND","NEW_SOUND","OXIGEN","OXIGEN_LOW","RESCUE_COMPLETED","RESCUE_SEQUENCE","SPRITE","SUBMARINE","SHARK","DIVER","BOMB","exports","_CST","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","e","valueOf","getPrototypeOf","LoadScene","_Phaser$Scene","Phaser","Scene","_super","prop","load","setPath","image","audio","spritesheet","frameWidth","frameHeight","_this","loadSprites","loadAudio","loadImages","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","console","log","file","src","sys","device","touch","scene","start","MenuScene","setDepth","setOrigin","playButton","hoverSprite","sprite","x","y","setScale","sound","play","loop","volume","anims","frameRate","repeat","frames","generateFrameNumbers","setInteractive","setVisible","playerDirection","submarineOnSurface","submarineSpeed","oxigenLevel","oxigenBar","pausePlayer","diversXPos","diverSummon","diversToRescue","getShark","getEnemy","diverRescued","Events","EventEmitter","makeSoundFx","score","scoreText","level","sceneInit","advanceLevel","actionKey","PlayScene","data","initPlayerVariables","sceneRestart","gameLevel","stopAll","plugin","background","physics","world","joyStick","plugins","get","radius","base","circle","thumb","dir","forceMin","fixed","enable","controls","createCursorKeys","keyboard","addKeys","addKey","end","soundFx","rescueEvent","text","fontSize","fill","submarine","setSize","setOffset","body","setCollideWorldBounds","manyEnemies","group","defaults","setImmovable","manySharks","manyDivers","diversSaved","rightBombs","leftBombs","timedEvents","collider","_background","checkWorldBounds","destroy","_shark","_submarine","diver","setText","emit","_enemy","time","removeAllEvents","addEvent","delay","Math","Between","callback","sharkEvent","callbackScope","enemySubEvent","diverEvent","oxigenTimer","effect","getLength","getDivers","getChildren","remove","stopByKey","removeByKey","resumeAll","clear","endGame","sharks","enemies","hitTest","randomSharkPosition","testIfBodyExist","playAnimation","setVelocityX","randomEnemyPosition","stop","run","finalScore","delta","setVelocityY","pauseAll","active","checkDown","displayWidth","right","isDown","left","isUp","up","down","restart","EndScene","sleep","_LoadScene","_MenuScene","_PlayScene","_EndScene","Game","render","pixelArt","scale","autoCenter","Scale","CENTER_BOTH","mode","FIT","default","arcade","debug","debugShowBody","debugShowStaticBody"],"mappings":"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","file":"main.9f8b1c72.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\",\r\n        END: \"END\"\r\n    },\r\n    IMAGE: {\r\n        LOGO: \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY: \"play_button.png\",\r\n        TITLE: \"title_bg.png\",\r\n        GAME_BG: \"game_bg.png\",\r\n        END_BG: \"end_bg.png\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"menu_theme.mp3\",\r\n        GAME_MUSIC: \"main_theme.mp3\",\r\n        DIVER_SOUND: \"diver_rescued.ogg\",\r\n        ENEMY_SOUND: \"enemy_sub_destroyed.ogg\",\r\n        SHARK_SOUND: \"shark_killed.ogg\",\r\n        PLAYER_FIRE_SOUND: \"fire_sound.ogg\",\r\n        END_SOUND: \"gameover.ogg\",\r\n        NEW_SOUND: \"new_game.ogg\",\r\n        OXIGEN: \"oxigen_refill.ogg\",\r\n        OXIGEN_LOW: \"oxigen_low.ogg\",\r\n        RESCUE_COMPLETED: \"rescue_completed.ogg\",\r\n        RESCUE_SEQUENCE: \"rescue_sequence.ogg\"\r\n    },\r\n    SPRITE: {\r\n        SUBMARINE: \"submarine.png\",\r\n        SHARK: \"shark.png\",\r\n        DIVER: \"diver.png\",\r\n        BOMB: \"bomb.png\"\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n\r\n    loadImages() {// load all images at once\r\n        this.load.setPath(\"./assets/image\");\r\n\r\n        for (let prop in CST.IMAGE) {\r\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n        }\r\n    }\r\n\r\n    loadAudio() { // load all audio at once\r\n        this.load.setPath(\"./assets/audio\");\r\n\r\n        for (let prop in CST.AUDIO) {\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n\r\n    loadSprites() {  // if all sprites are the same size load all at once\r\n        this.load.setPath(\"./assets/sprite\");\r\n\r\n        this.load.spritesheet(CST.SPRITE.SUBMARINE, CST.SPRITE.SUBMARINE, { frameWidth: 96, frameHeight: 33});\r\n        this.load.spritesheet(CST.SPRITE.SHARK, CST.SPRITE.SHARK, { frameWidth: 465, frameHeight: 230});\r\n        this.load.spritesheet(CST.SPRITE.DIVER, CST.SPRITE.DIVER, { frameWidth: 320, frameHeight: 219});\r\n        this.load.spritesheet(CST.SPRITE.BOMB, CST.SPRITE.BOMB, { frameWidth: 288, frameHeight: 210});\r\n    }\r\n\r\n    preload() {\r\n\r\n        this.loadSprites();\r\n\r\n        this.loadAudio();\r\n\r\n        this.loadImages();\r\n        //create loading bar\r\n\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // white\r\n            }\r\n        })\r\n        // simulate large load\r\n\r\n        // loader event\r\n\r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.renderer.width * percent, 50);\r\n            console.log(percent);\r\n        })\r\n\r\n        this.load.on(\"complete\", () => {\r\n        });\r\n\r\n        this.load.on(\"load\", (file) => {\r\n            console.log(file.src)\r\n        })\r\n    }\r\n    create() {\r\n        console.log(\"touch: \",this.sys.game.device.input.touch);\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init() {\r\n    }\r\n\r\n    preload() {\r\n    }\r\n    \r\n    create() { // create menu image\r\n        console.log(\"title loading\");\r\n        // creates in z order\r\n\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.20, CST.IMAGE.LOGO).setDepth(1);\r\n        this.add.image(0, 0, CST.IMAGE.TITLE).setOrigin(0).setDepth(0);\r\n\r\n        //set button to a variable\r\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, CST.IMAGE.PLAY).setDepth(1);\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, CST.IMAGE.OPTIONS).setDepth(1);\r\n        let hoverSprite = this.add.sprite((playButton.x - playButton.width), playButton.y, CST.SPRITE.SUBMARINE).setScale(1);\r\n\r\n        //play music\r\n        this.sound.play(CST.AUDIO.TITLE, {\r\n            loop: true,\r\n            volume: 0.8\r\n        })\r\n\r\n        // create animation\r\n        this.anims.create({\r\n            key: \"animSubmarine\",\r\n            frameRate: 3,\r\n            repeat: -1,// forever\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                frames: [0, 1, 2]\r\n            })\r\n        })\r\n\r\n        // make buttons interactive\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            console.log(\"hovering\")\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"animSubmarine\");\r\n            hoverSprite.x = playButton.x - playButton.width;\r\n            hoverSprite.y = playButton.y;\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            console.log(\"out of here\")\r\n            hoverSprite.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Play\")\r\n            this.scene.start(CST.SCENES.PLAY);\r\n        })\r\n\r\n    }\r\n}","import { CST } from \"../CST\";\r\n//********NPCs variables */\r\nlet diverSummon = false; // diver appears or not on screen\r\nlet diversToRescue = 0;\r\nvar getShark = 0 // shark childrens\r\nvar getEnemy = 0 // enemies childrens \r\nconst diverRescued = new Phaser.Events.EventEmitter();// new event \r\nconst makeSoundFx = new Phaser.Events.EventEmitter();// new event \r\n//****player variables ********\r\nlet playerDirection; // -1 is left and 1 is right\r\nlet submarineOnSurface;\r\nlet submarineSpeed;\r\nlet oxigenLevel;\r\nvar oxigenBar;\r\nlet pausePlayer;\r\nlet diversXPos;\r\n//********other variables */\r\nlet score = 0;\r\nvar scoreText = 0;\r\nlet level = 0;\r\nlet sceneInit = true;\r\nlet advanceLevel = false;\r\nvar actionKey = 0;\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super({ key: CST.SCENES.PLAY });\r\n    }\r\n\r\n    initPlayerVariables() { // actually init all player variables.\r\n        playerDirection = 1; // -1 is left and 1 is right\r\n        submarineOnSurface = true;\r\n        submarineSpeed = 120;\r\n        oxigenLevel = 100;\r\n        oxigenBar = 0;\r\n        pausePlayer = false;\r\n        diversXPos = 200;\r\n    }\r\n\r\n    init(data) {\r\n        this.initPlayerVariables();\r\n\r\n        if (data.sceneRestart == true) {// reset this scence but avoid to init events and anims again\r\n            level = data.gameLevel;\r\n            sceneInit = false;\r\n        }\r\n    }\r\n\r\n    preload() {\r\n        this.sound.stopAll(); // stops menu sound \r\n        this.load.plugin(\"rexvirtualjoystickplugin\", \"assets/plugins/virtualJoystick.js\", true);\r\n    }\r\n\r\n    create() {\r\n\r\n        // add background\r\n        this.background = this.physics.add.image(0, 0, CST.IMAGE.GAME_BG).setOrigin(0).setDepth(0);// background\r\n        this.physics.world.add(this.background);\r\n        //this.physics.world.setBounds(0,0,800,600);\r\n\r\n        if (this.sys.game.device.input.touch == true) {// true if touch screen is present\r\n            //***********virtual joystick******** */\r\n            this.background.setInteractive(); // use background as fire button\r\n\r\n            this.joyStick = this.plugins.get(\"rexvirtualjoystickplugin\").add(this, {// virtual joystick deafults\r\n                x: 120,\r\n                y: 520,\r\n                radius: 100,\r\n                base: this.add.circle(0, 0, 50, 0x888888),\r\n                thumb: this.add.circle(0, 0, 25, 0xcccccc),\r\n                dir: \"4dir\",\r\n                forceMin: 16,\r\n                fixed: true,\r\n                enable: true\r\n            });\r\n\r\n            this.controls = this.joyStick.createCursorKeys();// state of cursor keys\r\n\r\n            this.background.on(\"pointerdown\", () => {\r\n                actionKey = true;\r\n            });\r\n\r\n        } else {\r\n            this.controls = this.input.keyboard.addKeys(\"up, down, left, right\");// if no touch, use keyboard\r\n            actionKey = this.input.keyboard.addKey(\"space\");// use space as action keys\r\n        }\r\n\r\n        // ************submarine animatiion***************\r\n        if (sceneInit && level == 0) { // create anims and events only once\r\n            this.anims.create({\r\n                key: \"left\",\r\n                frameRate: 10,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                    start: 0,\r\n                    end: 2\r\n                })\r\n            });\r\n\r\n            this.anims.create({\r\n                key: \"right\",\r\n                frameRate: 10,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                    start: 3,\r\n                    end: 5\r\n                })\r\n            });\r\n\r\n            //********************* shark animation**************\r\n            this.anims.create({\r\n                key: \"sharkLeftToRight\",\r\n                frameRate: 5,\r\n                repeat: -1,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.SHARK, {\r\n                    frames: [0, 1, 2, 1, 0]\r\n                })\r\n            })\r\n\r\n            //*****************diver animation *****************\r\n            this.anims.create({\r\n                key: \"diverLeftToRight\",\r\n                frameRate: 6,\r\n                repeat: -1,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.DIVER, {\r\n                    frames: [0, 1, 2, 1, 0, 2]\r\n                })\r\n            })\r\n\r\n            // *****bomb animation or direction change*******\r\n            this.anims.create({\r\n                key: \"bombRight\",\r\n                frameRate: 0,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.BOMB, {\r\n                    frames: [0]\r\n                })\r\n            })\r\n\r\n            this.anims.create({\r\n                key: \"bombLeft\",\r\n                frameRate: 0,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.BOMB, {\r\n                    frames: [1]\r\n                })\r\n            })\r\n\r\n            //********enemies animation****************\r\n            this.anims.create({\r\n                key: \"enemiLeftToRight\",\r\n                frameRate: 6,\r\n                repeat: -1,\r\n                frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                    frames: [6, 7, 8]\r\n                })\r\n            })\r\n\r\n            /***********Events****** */\r\n            makeSoundFx.on(\"sound\", this.soundFx, this); // sound event handler\r\n            diverRescued.on(\"rescued\", this.rescueEvent, this); // sound event handler\r\n        }\r\n\r\n        //******oxigen bar ****** */\r\n        oxigenBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0x000FF // white\r\n            }\r\n        });\r\n\r\n        oxigenBar.fillRect(380, 540, oxigenLevel, 18).setDepth(1);\r\n        // ************add  text***********\r\n\r\n        scoreText = this.add.text(16, 16, \"score: 0\", { fontSize: \"32px\", fill: \"#000\" });\r\n        this.add.text(280, 540, \"OXIGEN:\", { fontSize: \"24px\", fill: \"#000\" });\r\n\r\n        // ******** sound********\r\n        this.sound.play(CST.AUDIO.GAME_MUSIC, { // load main theme\r\n            loop: true,\r\n            volume: 0.2\r\n        });\r\n\r\n        //add player submarine**************\r\n        this.submarine = this.physics.add.sprite(400, 75, CST.SPRITE.SUBMARINE, 0).setScale(1);\r\n        this.submarine.setSize(80, 30).setOffset(6, 2);// change submarine hitbox size\r\n        this.submarine.body.setCollideWorldBounds(true); // set boundaries for submarine sprite\r\n\r\n        //add enemy submarine****************\r\n        this.manyEnemies = this.physics.add.group();\r\n        this.manyEnemies.defaults.setImmovable = true; // group deafults\r\n\r\n        //submarine group****************\r\n        this.manySharks = this.physics.add.group();\r\n        this.manySharks.defaults.setImmovable = true; // group deafults\r\n\r\n        //divers group**************\r\n        this.manyDivers = this.physics.add.group();\r\n        this.manyDivers.defaults.setImmovable = true;\r\n\r\n        this.diversSaved = this.add.group();\r\n\r\n        // bomb group*****************\r\n        this.rightBombs = this.physics.add.group();\r\n        this.rightBombs.defaults.setImmovable = true; // group deafults\r\n\r\n        this.leftBombs = this.physics.add.group();\r\n        this.leftBombs.defaults.setImmovable = true; // group deafults\r\n\r\n        // add a timed events\r\n        this.timedEvents();\r\n\r\n        // *************sprite colition******************\r\n\r\n        this.physics.add.collider(this.background, this.rightBombs, function (_background, rightBombs) { // right bombs collition detect\r\n\r\n            if (rightBombs.body.checkWorldBounds()) {// checks if the bombs are in the world bounds\r\n                rightBombs.destroy();// if not destroy bombs\r\n            }\r\n        });\r\n\r\n        this.physics.add.collider(this.background, this.leftBombs, function (_background, leftBombs) { // left bomb collition detect\r\n\r\n            if (leftBombs.body.checkWorldBounds()) {// checks if the bombs are in the world bounds\r\n                leftBombs.destroy();// if not destroy bombs\r\n            }\r\n        });\r\n\r\n        this.physics.add.collider(this.background, this.manyDivers, function (_background, manyDivers) { // divers collition detect\r\n\r\n            if (manyDivers.body.checkWorldBounds()) {// checks if the divers are in the world bounds\r\n                manyDivers.destroy();// if not destroy diver\r\n            }\r\n        });\r\n\r\n        this.physics.add.collider(this.submarine, this.manySharks, function (submarine, _shark) { // collition detect\r\n            submarine.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.submarine, function (_submarine, diver) { // collition detect\r\n            diver.destroy();\r\n            score += 20;\r\n            scoreText.setText('Score: ' + score);\r\n            makeSoundFx.emit(\"sound\", 2);\r\n            diverRescued.emit(\"rescued\");\r\n        });\r\n\r\n        this.physics.add.collider(this.submarine, this.manyEnemies, function (submarine, _enemy) { // collition detect\r\n            submarine.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.rightBombs, function (manyDivers, rightBombs) { // collition detect\r\n            manyDivers.destroy();\r\n            rightBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.leftBombs, function (manyDivers, leftBombs) { // collition detect\r\n            manyDivers.destroy();\r\n            leftBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manySharks, this.rightBombs, function (manySharks, rightBombs) { // collition detect\r\n            manySharks.destroy();\r\n            rightBombs.destroy();\r\n            score += 5;\r\n            scoreText.setText('Score: ' + score);\r\n            makeSoundFx.emit(\"sound\", 1);\r\n        });\r\n\r\n        this.physics.add.collider(this.manySharks, this.leftBombs, function (manySharks, leftBombs) { // collition detect\r\n            manySharks.destroy();\r\n            leftBombs.destroy();\r\n            score += 5;\r\n            scoreText.setText('Score: ' + score);\r\n            makeSoundFx.emit(\"sound\", 1);\r\n        });\r\n\r\n        this.physics.add.collider(this.manyEnemies, this.rightBombs, function (manyEnemies, rightBombs) { // collition detect\r\n            manyEnemies.destroy();\r\n            rightBombs.destroy();\r\n            score += 10;\r\n            scoreText.setText('Score: ' + score);\r\n            makeSoundFx.emit(\"sound\", 0);\r\n        });\r\n\r\n        this.physics.add.collider(this.manyEnemies, this.leftBombs, function (manyEnemies, leftBombs) { // collition detect\r\n            manyEnemies.destroy();\r\n            leftBombs.destroy();\r\n            score += 10;\r\n            scoreText.setText('Score: ' + score);\r\n            makeSoundFx.emit(\"sound\", 0);\r\n        });\r\n    }\r\n\r\n    timedEvents() {\r\n        this.time.removeAllEvents();\r\n        this.time.addEvent({ delay: Phaser.Math.Between(2000, (4000 - (level * 100))), callback: this.sharkEvent, callbackScope: this, loop: true }); // create a shark \r\n        this.time.addEvent({ delay: Phaser.Math.Between(3000, (4000 - (level * 100))), callback: this.enemySubEvent, callbackScope: this, loop: true });// create a enemy sub\r\n        this.time.addEvent({ delay: Phaser.Math.Between(2000, 6000), callback: this.diverEvent, callbackScope: this, loop: true });// create a diver\r\n        this.time.addEvent({ delay: 1000, callback: this.oxigenTimer, callbackScope: this, loop: true });// create a diver\r\n    }\r\n\r\n    //*****Create sound effects********* */\r\n    soundFx(effect) {// emits one time sounds no repeat\r\n        switch (effect) {\r\n            case 0:\r\n                this.sound.play(CST.AUDIO.ENEMY_SOUND);// enemy killed\r\n                break;\r\n            case 1:\r\n                this.sound.play(CST.AUDIO.SHARK_SOUND);// shark killed\r\n                break;\r\n            case 2:\r\n                this.sound.play(CST.AUDIO.DIVER_SOUND);// diver rescued sound\r\n                break;\r\n            case 3:\r\n                this.sound.play(CST.AUDIO.OXIGEN);//oxigen refill sound\r\n                break;\r\n        }\r\n    }\r\n\r\n    /******Dispay number of divers rescued on screen******** */\r\n    rescueEvent() {\r\n        if (!submarineOnSurface && this.diversSaved.getLength() < 6) {\r\n            diversXPos += 50;\r\n            diversToRescue = 1;\r\n            this.diversSaved.add(this.add.sprite(diversXPos, 580, CST.SPRITE.DIVER, 0).setScale(0.15));\r\n\r\n            if (this.diversSaved.getLength() == 6) {\r\n                diversToRescue = 6;\r\n                advanceLevel = true;\r\n                this.sound.play(CST.AUDIO.RESCUE_COMPLETED);\r\n            }\r\n        } else if (submarineOnSurface && diversToRescue > 0) {\r\n            diversXPos -= 50;\r\n            diversToRescue--;\r\n            const getDivers = this.diversSaved.getChildren();\r\n            const i = (this.diversSaved.getLength() - 1);\r\n            this.diversSaved.remove(getDivers[i], true, true);\r\n        }\r\n    }\r\n\r\n    /********Oxigen bar timer******** */\r\n    oxigenTimer() {\r\n\r\n        if (submarineOnSurface && pausePlayer) {// if submarine is on surface oxigen is refilled \r\n            diverRescued.emit(\"rescued\");\r\n\r\n            if (oxigenLevel < 100) {\r\n                oxigenLevel += 15; // recharge oxigen\r\n            }\r\n\r\n            if (oxigenLevel > 100) {\r\n                oxigenLevel = 100;\r\n            }\r\n\r\n            if (diversToRescue == 0 && oxigenLevel == 100) {\r\n                pausePlayer = false;// unpause player\r\n                this.sound.stopByKey(CST.AUDIO.OXIGEN);// stop oxigen refill sound\r\n                this.sound.removeByKey(CST.AUDIO.OXIGEN_LOW);// stop oxigen refill sound\r\n                this.sound.resumeAll();// resume music\r\n\r\n                if (advanceLevel) {\r\n                    advanceLevel = false;\r\n                    level++;\r\n                    console.log(level);\r\n                    this.timedEvents();\r\n                }\r\n            } else {\r\n                makeSoundFx.emit(\"sound\", 3);// oxigen refill\r\n            }\r\n        }\r\n\r\n        if (!submarineOnSurface) {// if the submarine is underwater oxigen is consumed\r\n            oxigenBar.clear();\r\n\r\n            if (oxigenLevel -= 2, oxigenLevel < 1) { // if no oxigen left end game.\r\n                this.endGame();\r\n            }\r\n\r\n            if (oxigenLevel == 30) {\r\n                this.sound.play(CST.AUDIO.OXIGEN_LOW, { // load main theme\r\n                    loop: true,\r\n                    volume: 0.3\r\n                });\r\n            }\r\n        }\r\n        oxigenBar.fillRect(380, 540, oxigenLevel, 18).setDepth(1);\r\n    }\r\n\r\n    testIfBodyExist(x, y, sharks, enemies) { // check if the place if already in use by another body\r\n\r\n        for (let i = 0; i < this.manySharks.getLength(); i++) {\r\n\r\n            if (getShark[i].body.x > 800) {  // looping the array to destroy sharks that are out of bounds.\r\n                this.manySharks.remove(getShark[i], true, true);\r\n            }\r\n\r\n            if (sharks[i].body.hitTest(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.manyEnemies.getLength(); i++) {\r\n\r\n            if (getEnemy[i].body.x > 800) {  // looping the array to destroy sharks that are out of bounds.\r\n                this.manyEnemies.remove(getEnemy[i], true, true);\r\n            }\r\n\r\n            if (enemies[i].body.hitTest(x, y)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n        return false\r\n    }\r\n\r\n    //************Timed events**************** */\r\n    sharkEvent() { // callback shark timed event\r\n        const randomSharkPosition = Phaser.Math.Between(120, 500); // randomize shark position\r\n        getShark = this.manySharks.getChildren(); // get all children of the group \r\n\r\n        if (this.testIfBodyExist(0, randomSharkPosition, getShark, getEnemy) == false) {\r\n            this.manySharks.add(this.physics.add.sprite(0, randomSharkPosition, CST.SPRITE.SHARK, 0).setScale(0.15));\r\n            this.manySharks.playAnimation(\"sharkLeftToRight\"); // play shark left animation. \r\n            this.manySharks.setVelocityX(100);// set shark left to right velocity \r\n\r\n            if (diverSummon) {// divers appears on screen in front of shark\r\n                diverSummon = false;\r\n                this.manyDivers.add(this.physics.add.sprite(60, randomSharkPosition, CST.SPRITE.DIVER, 0).setScale(0.15));\r\n                this.manyDivers.playAnimation(\"diverLeftToRight\"); // play diver\r\n                this.manyDivers.setVelocityX(100);\r\n            }\r\n        }\r\n    }\r\n\r\n    enemySubEvent() {\r\n        const randomEnemyPosition = Phaser.Math.Between(120, 550); // randomize enemy sub position\r\n        getEnemy = this.manyEnemies.getChildren(); // get all children of the group \r\n\r\n        if (this.testIfBodyExist(0, randomEnemyPosition, getShark, getEnemy) == false) {\r\n            this.manyEnemies.add(this.physics.add.sprite(0, randomEnemyPosition, CST.SPRITE.SUBMARINE, 0).setScale(0.8))\r\n            this.manyEnemies.playAnimation(\"enemiLeftToRight\"); // play diver\r\n            this.manyEnemies.setVelocityX(100);\r\n        }\r\n\r\n        for (let i = 0; i < this.manyEnemies.getLength() && this.manyEnemies.getLength() != 0; i++) { // make sure that the sprite y possition isn´t used\r\n\r\n            if (getEnemy[i].body.x > 800) {  // looping the array to destroy sharks that are out of bounds.\r\n                this.manyEnemies.remove(getEnemy[i], true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    diverEvent() {\r\n        diverSummon = true;\r\n    }\r\n\r\n    endGame() {\r\n\r\n        //this.input.input.shutdown();\r\n        this.sound.removeByKey(CST.AUDIO.GAME_MUSIC);// stop oxigen refill sound\r\n        this.scene.stop(CST.SCENES.PLAY);// stop current scene\r\n        this.scene.run(CST.SCENES.END, { finalScore: score, gameLevel: level });// go to score scene*/\r\n    }\r\n\r\n    update(time, delta) {// delta 16.6666 @60fps\r\n\r\n        if (!submarineOnSurface && this.submarine.y < 75) {// check if submarine is on surface\r\n\r\n            if (!submarineOnSurface && this.diversSaved.getLength() == 0) {// if the submarine reaches the surface without any diver end game\r\n                this.endGame();\r\n            }\r\n            submarineOnSurface = true;\r\n            pausePlayer = true;\r\n            this.submarine.setVelocityY(0);\r\n            this.submarine.setVelocityX(0);\r\n            this.sound.pauseAll();// stop music\r\n        } else if (this.submarine.y > 75) {// if submarine is diving\r\n            submarineOnSurface = false;\r\n        }\r\n        //*********player movement******** */\r\n        if (this.submarine.active == true) { // inputs only ative while player is alive\r\n\r\n            if (pausePlayer) return;// if refilling oxigen the submarine isn´t movable\r\n\r\n            if (actionKey == true || this.input.keyboard.checkDown(actionKey, 500)) {\r\n                this.sound.play(CST.AUDIO.PLAYER_FIRE_SOUND);\r\n\r\n                if (actionKey == true) actionKey = false;\r\n\r\n                if (playerDirection == 1) {\r\n                    this.rightBombs.add(this.physics.add.sprite(this.submarine.x + (this.submarine.displayWidth / 2), this.submarine.y, CST.SPRITE.BOMB, 0).setScale(0.10));\r\n                    this.rightBombs.setVelocityX(150);\r\n                    this.rightBombs.playAnimation(\"bombRight\");\r\n                } else {\r\n                    this.leftBombs.add(this.physics.add.sprite(this.submarine.x - (this.submarine.displayWidth / 2), this.submarine.y, CST.SPRITE.BOMB, 0).setScale(0.10));\r\n                    this.leftBombs.setVelocityX(-150);\r\n                    this.leftBombs.playAnimation(\"bombLeft\");\r\n                }\r\n            }\r\n\r\n            if (this.controls.right.isDown == true) { // left submarine  sprite movement\r\n                this.submarine.setVelocityX(submarineSpeed);\r\n                this.submarine.play(\"left\", true);\r\n                playerDirection = 1;\r\n            }\r\n\r\n            if (this.controls.left.isDown == true) { // right submarine sprite movement\r\n                this.submarine.setVelocityX(-submarineSpeed);\r\n                this.submarine.play(\"right\", true);\r\n                playerDirection = -1;\r\n            }\r\n\r\n            if ((this.controls.left.isUp && this.controls.right.isUp)) { // not moving on x axis\r\n                this.submarine.setVelocityX(0);\r\n            }\r\n\r\n            if (this.controls.up.isDown == true && !submarineOnSurface) { // up submarine  sprite movement              \r\n                this.submarine.setVelocityY(-submarineSpeed);\r\n            }\r\n\r\n            if (this.controls.up.isUp && this.controls.down.isUp) { // not moving on x axis\r\n                this.submarine.setVelocityY(0);\r\n            }\r\n\r\n            if (this.controls.down.isDown == true) { // down submarine sprite movement\r\n                this.submarine.setVelocityY(submarineSpeed);\r\n            }\r\n\r\n        } else {\r\n            this.endGame();\r\n        }\r\n    }\r\n}\r\n","import { CST } from \"../CST\";\r\nlet score = 0;\r\nlet level = 0;\r\nlet restart = true;\r\nexport class EndScene extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super({ key: CST.SCENES.END });\r\n    }\r\n    init(data) {\r\n        score = data.finalScore;\r\n        level = data.gameLevel;\r\n    }\r\n\r\n    preload() {\r\n        this.sound.stopAll(); // stops menu sound \r\n        this.sound.play(CST.AUDIO.END_SOUND);  \r\n    }\r\n\r\n    create() {\r\n        this.add.image(0, 0, CST.IMAGE.END_BG).setOrigin(0).setDepth(0);// background\r\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2.4, CST.IMAGE.PLAY).setDepth(1);\r\n        let scoreText = this.add.text(285, 100, \"Final Score:\", { fontSize: \"32px\", fill: \"#FFF\" });\r\n        scoreText.setText(\"Final Score:\" + score);\r\n\r\n        // make buttons interactive\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            this.scene.sleep(CST.SCENES.END);\r\n            this.scene.start(CST.SCENES.PLAY, {gameLevel: level, sceneRestart: restart});// restart play scene\r\n        })\r\n    }\r\n}\r\n\r\n","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport { LoadScene } from \"./scenes/LoadScene\";\r\nimport { MenuScene } from \"./scenes/MenuScene\";\r\nimport { PlayScene } from \"./scenes/PlayScene\";\r\nimport { EndScene } from \"./scenes/EndScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    scene: [\r\n        LoadScene, MenuScene, PlayScene, EndScene\r\n    ],\r\n    render: {\r\n        pixelArt: true\r\n    },\r\n    scale: {\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        mode: Phaser.Scale.FIT,\r\n        width: 800,\r\n        height: 600,\r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n            debug: false,\r\n            debugShowBody: false, // show hitbox \r\n            debugShowStaticBody: false,\r\n        }\r\n    }\r\n});\r\n"]}