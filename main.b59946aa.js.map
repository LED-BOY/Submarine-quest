{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/scenes/PlayScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","PLAY","IMAGE","LOGO","OPTIONS","TITLE","SIDE_BOUNDS","AUDIO","GAME_MUSIC","BIG_IMPACT","LOW_IMPACT","SPRITE","SUBMARINE","SHARK","DIVER","BOMB","exports","_CST","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","e","valueOf","getPrototypeOf","LoadScene","_Phaser$Scene","Phaser","Scene","_super","prop","load","setPath","image","audio","spritesheet","frameWidth","frameHeight","_this","loadSprites","loadAudio","loadImages","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","console","log","file","src","scene","start","MenuScene","setDepth","setOrigin","playButton","hoverSprite","sprite","setScale","setVisible","sound","play","loop","volume","anims","frameRate","repeat","frames","generateFrameNumbers","setInteractive","x","y","diverSummon","enemyDestroySound","allowPlayerfire","playerDirection","PlayScene","stopAll","rightWorldBound","physics","setRotation","setSize","setOffset","setImmovable","leftWorldBound","end","submarine","setCollideWorldBounds","manyEnemies","group","defaults","manySharks","manyDivers","rightBombs","leftBombs","time","addEvent","delay","callback","sharkEvent","callbackScope","enemySubEvent","diverEvent","spriteAnimationEvent","keyboard","addKeys","collider","shark","destroy","diver","enemy","randomSharkPosition","Math","Between","getFirst","setVelocityX","getChildren","playAnimation","randomEnemy","delta","active","SPACE","isDown","isUp","D","A","W","setVelocityY","S","_LoadScene","_MenuScene","_PlayScene","Game","render","pixelArt","scale","autoCenter","Scale","CENTER_BOTH","default","arcade","debug","debugShowBody","debugShowStaticBody"],"mappings":"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","file":"main.b59946aa.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\"\r\n    },\r\n    IMAGE: {\r\n        LOGO: \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY: \"play_button.png\",\r\n        TITLE: \"title_bg.jpg\",\r\n        SIDE_BOUNDS: \"side_bounds.png\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"menu_theme.mp3\",\r\n        GAME_MUSIC: \"main_theme.mp3\",\r\n        BIG_IMPACT: \"big_impact.mp3\",\r\n        LOW_IMPACT: \"low_impact.mp3\"\r\n    },\r\n    SPRITE: {\r\n        SUBMARINE: \"submarine.png\",\r\n        SHARK: \"shark.png\",\r\n        DIVER: \"diver.png\",\r\n        BOMB: \"bomb.png\"\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n\r\n    loadImages() {// load all images at once\r\n        this.load.setPath(\"./assets/image\");\r\n\r\n        for (let prop in CST.IMAGE) {\r\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n        }\r\n    }\r\n\r\n    loadAudio() { // load all audio at once\r\n        this.load.setPath(\"./assets/audio\");\r\n\r\n        for (let prop in CST.AUDIO) {\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n\r\n    loadSprites() {  // if all sprites are the same size load all at once\r\n        this.load.setPath(\"./assets/sprite\");\r\n\r\n        this.load.spritesheet(CST.SPRITE.SUBMARINE, CST.SPRITE.SUBMARINE, { frameWidth: 96, frameHeight: 33});\r\n        this.load.spritesheet(CST.SPRITE.SHARK, CST.SPRITE.SHARK, { frameWidth: 465, frameHeight: 230});\r\n        this.load.spritesheet(CST.SPRITE.DIVER, CST.SPRITE.DIVER, { frameWidth: 320, frameHeight: 219});\r\n        this.load.spritesheet(CST.SPRITE.BOMB, CST.SPRITE.BOMB, { frameWidth: 288, frameHeight: 210});\r\n    }\r\n\r\n    preload() {\r\n\r\n        this.loadSprites();\r\n\r\n        this.loadAudio();\r\n\r\n        this.loadImages();\r\n        //create loading bar\r\n\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // white\r\n            }\r\n        })\r\n        // simulate large load\r\n\r\n        // loader event\r\n\r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.renderer.width * percent, 50);\r\n            console.log(percent);\r\n        })\r\n\r\n        this.load.on(\"complete\", () => {\r\n        });\r\n\r\n        this.load.on(\"load\", (file) => {\r\n            console.log(file.src)\r\n        })\r\n    }\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n    preload() {\r\n\r\n    }\r\n    create() { // create menu image\r\n        console.log(\"title loading\");\r\n        // creates in z order\r\n\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.20, CST.IMAGE.LOGO).setDepth(1);\r\n\r\n        this.add.image(0, 0, CST.IMAGE.TITLE).setOrigin(0).setDepth(0);\r\n\r\n        //set button to a variable\r\n        let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, CST.IMAGE.PLAY).setDepth(1);\r\n\r\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, CST.IMAGE.OPTIONS).setDepth(1);\r\n\r\n        let hoverSprite = this.add.sprite(100, 200, CST.SPRITE.SUBMARINE);\r\n        hoverSprite.setScale(1);\r\n        hoverSprite.setVisible(false);\r\n\r\n        //play music\r\n        this.sound.play(CST.AUDIO.TITLE, {\r\n            loop: true,\r\n            volume: 0.8\r\n        })\r\n\r\n        // create animation\r\n        this.anims.create({\r\n            key: \"animSubmarine\",\r\n            frameRate: 3,\r\n            repeat: -1,// forever\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                frames: [ 0, 1, 2]\r\n            })\r\n        })\r\n\r\n        // make buttons interactive\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            console.log(\"hovering\")\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"animSubmarine\");\r\n            hoverSprite.x = playButton.x - playButton.width;\r\n            hoverSprite.y = playButton.y;\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            console.log(\"out of here\")\r\n            hoverSprite.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"open\")\r\n            this.scene.start(CST.SCENES.PLAY);\r\n        })\r\n\r\n    }\r\n}","import { CST } from \"../CST\";\r\nlet diverSummon = false; // diver appears or not on screen\r\nlet enemyDestroySound = false;// play enemies sub destroy sound\r\nlet allowPlayerfire = false; // if player can fire or not\r\nlet playerDirection = 1; // -1 is left and 1 is right\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super({ key: CST.SCENES.PLAY });\r\n    }\r\n\r\n    preload() {\r\n        this.sound.stopAll(); // stops menu sound\r\n\r\n        // add background and boundaries\r\n        this.add.image(0, 0, CST.IMAGE.TITLE).setOrigin(0).setDepth(0);// background\r\n\r\n        this.rightWorldBound = this.physics.add.image(0, 0, CST.IMAGE.SIDE_BOUNDS).setRotation(0);\r\n        this.rightWorldBound.setSize(0, 0).setOffset(850, 300);\r\n        this.rightWorldBound.setImmovable(true);\r\n\r\n        this.leftWorldBound = this.physics.add.image(0, 0, CST.IMAGE.SIDE_BOUNDS).setRotation(0);\r\n        this.leftWorldBound.setSize(-50, 0).setOffset(0, 300);\r\n        this.leftWorldBound.setImmovable(true);\r\n\r\n        // ************submarine animatiion***************\r\n        this.anims.create({\r\n            key: \"left\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                start: 0,\r\n                end: 2\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"right\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                start: 3,\r\n                end: 5\r\n            })\r\n        });\r\n\r\n        //********************* shark animation**************\r\n        this.anims.create({\r\n            key: \"sharkLeftToRight\",\r\n            frameRate: 5,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SHARK, {\r\n                frames: [0, 1, 2, 1, 0]\r\n            })\r\n        })\r\n\r\n        //*****************diver animation *****************\r\n        this.anims.create({\r\n            key: \"diverLeftToRight\",\r\n            frameRate: 6,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.DIVER, {\r\n                frames: [0, 1, 2, 1, 0, 2]\r\n            })\r\n        })\r\n\r\n        // *****bomb animation or direction change*******\r\n        this.anims.create({\r\n            key: \"bombRight\",\r\n            frameRate: 0,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.BOMB, {\r\n                frames: [0]\r\n            })\r\n        })\r\n\r\n        this.anims.create({\r\n            key: \"bombLeft\",\r\n            frameRate: 0,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.BOMB, {\r\n                frames: [1]\r\n            })\r\n        })\r\n\r\n        //********enemies animation****************\r\n        this.anims.create({\r\n            key: \"enemiLeftToRight\",\r\n            frameRate: 6,\r\n            frames: this.anims.generateFrameNumbers(CST.SPRITE.SUBMARINE, {\r\n                frames: [6, 7, 8]\r\n            })\r\n        })\r\n    }\r\n\r\n    create() {\r\n        this.sound.play(CST.AUDIO.GAME_MUSIC, { // load main theme\r\n            loop: true,\r\n            volume: 0.2\r\n        });\r\n\r\n        //add player submarine**************\r\n        this.submarine = this.physics.add.sprite(200, 200, CST.SPRITE.SUBMARINE, 0).setScale(1);\r\n        this.submarine.setSize(80, 30).setOffset(6, 2);// change submarine hitbox size\r\n        this.submarine.setCollideWorldBounds(true); // set boundaries for submarine sprite\r\n\r\n        //add enemy submarine****************\r\n        this.manyEnemies = this.physics.add.group();\r\n        this.manyEnemies.defaults.setImmovable = true; // group deafults\r\n\r\n        //submarine group****************\r\n        this.manySharks = this.physics.add.group();\r\n        this.manySharks.defaults.setImmovable = true; // group deafults\r\n\r\n        //divers group**************\r\n        this.manyDivers = this.physics.add.group();\r\n        this.manyDivers.defaults.setImmovable = true;\r\n\r\n        // bomb group*****************\r\n        this.rightBombs = this.physics.add.group();\r\n        this.rightBombs.defaults.setImmovable = true; // group deafults\r\n\r\n        this.leftBombs = this.physics.add.group();\r\n        this.leftBombs.defaults.setImmovable = true; // group deafults\r\n\r\n        // add a timed event for new sharks creation.\r\n        this.time.addEvent({ delay: 4000, callback: this.sharkEvent, callbackScope: this, loop: true }); // create a shark \r\n        this.time.addEvent({ delay: 4000, callback: this.enemySubEvent, callbackScope: this, loop: true });// create a enemy sub\r\n        this.time.addEvent({ delay: 8000, callback: this.diverEvent, callbackScope: this, loop: true });// create a diver\r\n        this.time.addEvent({ delay: 1000, callback: this.spriteAnimationEvent, callbackScope: this, loop: true }); // animate \r\n\r\n        this.keyboard = this.input.keyboard.addKeys(\"W, S, A, D, SPACE\"); // keboard keys for controll\r\n\r\n        // *************sprite colition******************\r\n\r\n        this.physics.add.collider(this.submarine, this.manySharks, function (submarine, shark) { // collition detect\r\n            submarine.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.submarine, function (submarine, diver) { // collition detect\r\n            diver.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.submarine, this.manyEnemies, function (submarine, enemy) { // collition detect\r\n            submarine.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.rightBombs, function (manyDivers, rightBombs) { // collition detect\r\n            manyDivers.destroy();\r\n            rightBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyDivers, this.leftBombs, function (manyDivers, leftBombs) { // collition detect\r\n            manyDivers.destroy();\r\n            leftBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manySharks, this.rightBombs, function (manySharks, rightBombs) { // collition detect\r\n            manySharks.destroy();\r\n            rightBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manySharks, this.leftBombs, function (manySharks, leftBombs) { // collition detect\r\n            manySharks.destroy();\r\n            leftBombs.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.manyEnemies, this.rightBombs, function (manyEnemies, rightBombs) { // collition detect\r\n            manyEnemies.destroy();\r\n            rightBombs.destroy();\r\n            enemyDestroySound = true;\r\n        });\r\n\r\n        this.physics.add.collider(this.manyEnemies, this.leftBombs, function (manyEnemies, leftBombs) { // collition detect\r\n            manyEnemies.destroy();\r\n            leftBombs.destroy();\r\n            enemyDestroySound = true;\r\n        });\r\n\r\n\r\n        // **************world bounds collition*********\r\n        //right collitions\r\n        this.physics.add.collider(this.rightWorldBound, this.manySharks, function (rightWorldBound, shark) { // collition detect\r\n            shark.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.rightWorldBound, this.manyDivers, function (rightWorldBound, diver) { // collition detect\r\n            diver.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.rightWorldBound, this.manyEnemies, function (rightWorldBound, enemy) { // collition detect\r\n            enemy.destroy();\r\n        });\r\n\r\n        this.physics.add.collider(this.rightWorldBound, this.rightBombs, function (rightWorldBound, rightBombs) { // collition detect\r\n            rightBombs.destroy();\r\n        });\r\n        // left collitons\r\n        this.physics.add.collider(this.leftWorldBound, this.leftBombs, function (rightWorldBound, leftBombs) { // collition detect\r\n            leftBombs.destroy();\r\n        });\r\n    }\r\n\r\n    sharkEvent() { // callback shark timed event\r\n        const randomSharkPosition = Phaser.Math.Between(100, 500); // randomize shark position\r\n\r\n        if (this.manySharks.getFirst(false, false, !0, randomSharkPosition) == null) { // if the shark does not exist create one\r\n            this.manySharks.add(this.physics.add.sprite(0, randomSharkPosition, CST.SPRITE.SHARK, 0).setScale(0.15));\r\n\r\n            if (diverSummon) {// divers appears on screen\r\n                diverSummon = false;\r\n                this.manyDivers.add(this.physics.add.sprite(60, randomSharkPosition, CST.SPRITE.DIVER, 0).setScale(0.15));\r\n                this.manyDivers.setVelocityX(50);\r\n            }\r\n        }\r\n        this.manySharks.setVelocityX(50);// set shark left to right velocity \r\n        console.log(this.manySharks.getChildren());\r\n    }\r\n\r\n    spriteAnimationEvent() {\r\n        this.manySharks.playAnimation(\"sharkLeftToRight\"); // play shark left animation. \r\n        this.manyDivers.playAnimation(\"diverLeftToRight\"); // play diver\r\n        this.manyEnemies.playAnimation(\"enemiLeftToRight\"); // play diver\r\n    }\r\n\r\n    enemySubEvent() {\r\n        const randomEnemy = Phaser.Math.Between(100, 600); // randomize enemy sub position\r\n        this.manyEnemies.add(this.physics.add.sprite(0, randomEnemy, CST.SPRITE.SUBMARINE, 0).setScale(1));\r\n        this.manyEnemies.setVelocityX(50);\r\n    }\r\n\r\n    diverEvent() {\r\n        diverSummon = true;\r\n    }\r\n\r\n    update(time, delta) {// delta 16.6666 @60fps\r\n\r\n        if (enemyDestroySound) {\r\n            enemyDestroySound = false;\r\n            this.sound.play(CST.AUDIO.LOW_IMPACT, { // submarine explosion\r\n                loop: false,\r\n                volume: 0.6\r\n            });\r\n        }\r\n\r\n        if (this.submarine.active == true) {\r\n\r\n            if (this.keyboard.SPACE.isDown && allowPlayerfire) {\r\n                allowPlayerfire = false;\r\n\r\n                if (playerDirection == 1) {\r\n                    this.rightBombs.add(this.physics.add.sprite(this.submarine.x, this.submarine.y, CST.SPRITE.BOMB, 0).setScale(0.10));\r\n                    this.rightBombs.setVelocityX(74);\r\n                    this.rightBombs.playAnimation(\"bombRight\");\r\n                } else {\r\n                    this.leftBombs.add(this.physics.add.sprite(this.submarine.x, this.submarine.y, CST.SPRITE.BOMB, 0).setScale(0.10));\r\n                    this.leftBombs.setVelocityX(-74);\r\n                    this.leftBombs.playAnimation(\"bombLeft\");\r\n                }\r\n            }\r\n\r\n            if (this.keyboard.SPACE.isUp) {\r\n                allowPlayerfire = true;\r\n            }\r\n\r\n            if (this.keyboard.D.isDown == true) { // left submarine  sprite movement\r\n                this.submarine.setVelocityX(64);\r\n                this.submarine.play(\"left\", true);\r\n                playerDirection = 1;\r\n            }\r\n\r\n            if (this.keyboard.A.isDown == true) { // right submarine sprite movement\r\n                this.submarine.setVelocityX(-64);\r\n                this.submarine.play(\"right\", true);\r\n                playerDirection = -1;\r\n            }\r\n\r\n            if (this.keyboard.A.isUp && this.keyboard.D.isUp) { // not moving on x axis\r\n                this.submarine.setVelocityX(0);\r\n            }\r\n\r\n            if (this.keyboard.W.isDown == true) { // up submarine  sprite movement\r\n                this.submarine.setVelocityY(-64);\r\n                //this.submarine.play(\"left\", true);\r\n            }\r\n\r\n            if (this.keyboard.S.isDown == true) { // down submarine sprite movement\r\n                this.submarine.setVelocityY(64);\r\n                //this.submarine.play(\"right\", true);\r\n            }\r\n\r\n            if (this.keyboard.W.isUp && this.keyboard.S.isUp) { // not moving on x axis\r\n                this.submarine.setVelocityY(0);\r\n            }\r\n        } else {\r\n            this.sound.play(CST.AUDIO.BIG_IMPACT, { // submarine explosion\r\n                loop: false\r\n            });\r\n            \r\n            this.scene.start(CST.SCENES.MENU);\r\n        }\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport { LoadScene } from \"./scenes/LoadScene\";\r\nimport { MenuScene } from \"./scenes/MenuScene\";\r\nimport { PlayScene } from \"./scenes/PlayScene\";\r\nlet game = new Phaser.Game({\r\n    width: 800,\r\n    height: 600,\r\n    scene: [\r\n        LoadScene, MenuScene, PlayScene\r\n    ],\r\n    render: {\r\n        pixelArt: true\r\n    },\r\n    scale: {\r\n        autoCenter: Phaser.Scale.CENTER_BOTH, \r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n            debug: false,\r\n            debugShowBody: false, // show hitbox \r\n            debugShowStaticBody: true,\r\n        }\r\n    }\r\n});\r\n"]}